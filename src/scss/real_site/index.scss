@import '_base';

body {
  padding-left: 0;
  padding-right: 0;
}

.entry {
  height: 100%;

  a {
    @include drop-shadow(1);

    border-radius: 0;
    display: block;
    height: 100%;
    overflow: hidden;
    position: relative;
    text-decoration: none;

    &:active,
    &:focus,
    &:hover {
      @include drop-shadow(2);

      background: none;

      img {
        transform: scale(1.0625);
      }

      .metadata {
        background-color: rgba(darken($color-secondary-dark, 5%), 0.6);
      }
    }
  }

  img {
    bottom: 0;
    display: block;
    height: 100%;
    left: 0;
    opacity: 0.85;
    position: absolute;
    right: 0;
    top: 0;
    transition: transform 3 * $transition-1-frame ease-in-out;
    width: 100%;
    z-index: 1;
  }

  header {
    > * {
      margin: 0;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: $font-size-lg;
    line-height: $line-height-lg;
  }

  .metadata {
    @include text-drop-shadow;

    background-color: rgba(darken($color-off-black, 12%), 0.4);
    background-image: linear-gradient(
      to top,
      rgba(darken($color-off-black, 12%), 0.85),
      transparent
    );
    box-sizing: border-box;
    color: white;
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: flex-end;
    padding: $space-xl gridsystem-gutter-width() $space-md;
    position: relative;
    transition:
      box-shadow 4 * $transition-1-frame ease-in-out,
      background-color 4 * $transition-1-frame ease-in-out;
    width: 100%;
    z-index: 2;
  }

  .metadata,
  .metadata-inner {
    > * {
      margin: 0;

      + * {
        margin-top: $space-sm;
      }
    }
  }

  .subtitle {
    display: none;
  }

  .authors,
  .publication-date {
    font-size: $font-size-xs;
    line-height: $line-height-xs;
  }

  .publication-date {
    margin-top: $space-xxs;
  }
}

.entries {
  display: grid;
  grid-gap: $space-xs;
  grid-template-columns: repeat(6, 1fr);
  list-style: none;
  margin: 0;
  padding: 0;

  > * {
    grid-column-end: span 6;
    margin: 0;

    + * {
      margin-top: $space-xs;
    }
  }

  @supports (display: grid) {
    > * {
      margin: 0;
    }
  }
}

.columns-catalog {
  display: none;
}

.page-links {
  margin-top: $space-md;
}

main > .content {
  max-width: 20 * $vertical-rhythm;

  @supports (display: grid) {
    max-width: 50 * $vertical-rhythm;
  }
}

@include small-screen {
  .entries {
    grid-gap: $space-md $space-xs;

    > :not(:first-child) {
      grid-column-end: span 3;
    }

    @supports (display: grid) {
      > :nth-child(even) .entry a {
        border-radius: 0 $border-radius $border-radius 0;
      }

      > :nth-child(odd) .entry a {
        border-radius: $border-radius 0 0 $border-radius;
      }

      > :first-child {
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-size: $font-size-xl;
          line-height: $line-height-xl;
        }

        .entry a {
          border-radius: 0;
        }

        .metadata {
          padding-top: $space-xxl;
        }
      }
    }
  }
}

@include medium-screen {
  .entries {
    > :first-child,
    > :nth-child(2) {
      grid-column-end: span 3;
    }

    @supports (display: grid) {
      > :first-child .entry a {
        border-radius: 0 0 $border-radius 0;
      }

      > :nth-child(2) {
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-size: $font-size-xl;
          line-height: $line-height-xl;
        }

        .entry a {
          border-radius: 0 0 0 $border-radius;
        }

        .metadata {
          padding-top: $space-xxl;
        }
      }

      > :nth-child(3n+3) .entry a {
        border-radius: 0 $border-radius $border-radius 0;
      }

      > :nth-child(3n+4) .entry a {
        border-radius: $border-radius;
      }

      > :nth-child(3n+5) .entry a {
        border-radius: $border-radius 0 0 $border-radius;
      }
    }

    > :not(:first-child):not(:nth-child(2)) {
      grid-column-end: span 2;
    }
  }
}

@include x-large-screen {
  main > .content {
    padding: 0 gridsystem-gutter-width();
    box-sizing: border-box;
  }

  .entries {
    @supports (display: grid) {
      > :nth-child(n) .entry a {
        border-radius: $border-radius;
      }

      > :first-child .entry a {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }

      > :nth-child(2) .entry a {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }
  }
}
